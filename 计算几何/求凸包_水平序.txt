// 求凸包_水平序

#include <iostream>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>

#define MAX 100010
#define EQ(x, y) (fabs((x) - (y)) < eps)

using namespace std;

const double eps = 1e-8;
const double Pi = acos(-1.0);

struct Point {
    double x, y;

    Point() {}
    Point(double _x, double _y) : x(_x), y(_y) {}

    Point operator -(const Point &p) const {
        return Point(x - p.x, y - p.y);
    }

    double xMul(const Point &p) const {
        return x * p.y - y * p.x;
    }
} p[MAX], hull[MAX];

bool cmp(const Point &a, const Point &b) {
    return EQ(a.x, b.x) ? a.y < b.y : a.x < b.x;
}

bool check(const Point &a, const Point &b, const Point &c) {
    return (c - b).xMul(b - a) < 0;
}

int graham(Point *p, int n, Point *hull) {
    int i, m, cnt = 0;

    sort(p, p + n, cmp);
    for (i = cnt = 0; i < n; ++i) {
        while (cnt > 1 && !check(hull[cnt - 2], hull[cnt - 1], p[i])) --cnt;
        hull[cnt++] = p[i];
    }
    for (m = cnt, i = n - 1; ~i; --i) {
        while (cnt > m && !check(hull[cnt - 2], hull[cnt - 1], p[i])) --cnt;
        hull[cnt++] = p[i];
    }

	return --cnt;
}

