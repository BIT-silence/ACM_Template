// 求排列最后非0位，solve(n, m) 返回 P(n, m) 十进制最后非0位

#include <iostream>
#include <cstdio>
#include <cstring>
#include <utility>

#define X first
#define Y second

using namespace std;

typedef pair<int, int> Pii;

const int c3[] = {0, 0, 0, 1, 1, 1, 1, 1, 1, 3};
const int c7[] = {0, 0, 0, 0, 0, 0, 0, 1, 1, 1};

Pii operator -(const Pii &a, const Pii &b) {
    return make_pair(a.X - b.X, a.Y - b.Y);
}

int modPow(int a, int b, int p) {
    int ret = 1;
    for (a %= p; b; b >>= 1) {
        if (b & 1) ret = (ret * a) % p;
        a = (a * a) % p;
    }
    return ret;
}

int calc1(int n, int k) {
    int ret = 0;
    for ( ; n; n /= k) ret += n / k;
    return ret;
}

Pii calc2(int n) {
    int m;
    Pii ret = make_pair(0, 0);

    for ( ; n; n /= 2) {
        for (m = n; m; m /= 5) {
            ret.X += m / 10 * 3 + c3[m % 10];
            ret.Y += m / 10 + c7[m % 10];
        }
    }

    return ret;
}

int solve(int n, int m) {
    Pii w, cnt;

    w.X = calc1(n, 2) - calc1(n - m, 2);
    w.Y = calc1(n, 5) - calc1(n - m, 5);
    if (w.X < w.Y) return 5;
    cnt = calc2(n) - calc2(n - m);

    return modPow(2, w.X - w.Y, 10) * modPow(3, cnt.X, 10) * modPow(7, cnt.Y, 10) % 10;
}