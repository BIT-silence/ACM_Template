// 数位dp模板，此题为HDU3652，求<=n的数中含有13且模13为0的数的个数

#include <iostream>
#include <cstdio>
#include <cstring>

#define MAXN 12
#define MAXS 3
#define AC(x) (x == 2)
#define ER(x) (x == -1)

int dp[MAXN][MAXS][13], dfa[MAXS][10], digit[MAXN];

void init() {
    int i;

    for (i = 0; i < 10; ++i) dfa[0][i] = i == 1;
    for (i = 0; i < 10; ++i) {
        if (i == 1) dfa[1][i] = 1;
        else if (i == 3) dfa[1][i] = 2;
        else dfa[1][i] = 0;
    }
    for (i = 0; i < 10; ++i) dfa[2][i] = 2;

    memset(dp, -1, sizeof(dp));
}

int dfs(int p, int pre, int r, bool tag) {
    int i, up, ret = 0;

    if (p == -1) return AC(pre) && !r;
    if (!tag && ~dp[p][pre][r]) return dp[p][pre][r];
	
	up = tag ? digit[p] : 9;
    for (i = 0; i <= up; ++i) {
        ret += dfs(p - 1, dfa[pre][i], (r * 10 + i) % 13, tag && i == up);
    }
    if (!tag) dp[p][pre][r] = ret;

    return ret;
}

int solve(int n) {
    int p;
    for (p = 0; n; n /= 10) digit[p++] = n % 10;
    return dfs(p - 1, 0, 0, true);
}

int main() {
    int n;

    init();
    while (~scanf("%d", &n)) {
        printf("%d\n", solve(n));
    }

    return 0;
}
