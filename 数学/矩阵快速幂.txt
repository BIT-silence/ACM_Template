// 矩阵快速幂模板类，支持 int, long long, double 等类型
// p 为取模参数，p == -1 表示不取模

#include <iostream>
#include <cstdio>
#include <cstring>

#define MAX 128

using namespace std;

typedef long long i64;

template<typename T>
struct Matrix {
    T mat[MAX][MAX];
    static int sz, mod;

    Matrix() {}
    Matrix(const T &x) {
        int i;
        memset(mat, 0, sizeof(mat));
        for (i = 0; i < sz; ++i) mat[i][i] = x;
    }

    static int size() { return sz; }
    static void resize(int n) { sz = n; }
    static void setMod(int p) { mod = p; }

    T *operator [](int k) { return mat[k]; }
    const T *operator [](int k) const { return mat[k]; }

    Matrix operator *(const Matrix &o) const {
        Matrix ret(0);
        int i, j, k;
        for (i = 0; i < sz; ++i) {
            for (k = 0; k < sz; ++k) {
                if (!mat[i][k]) continue;
                for (j = 0; j < sz; ++j) {
                    ret.mat[i][j] += mat[i][k] * o.mat[k][j];
                    if (~mod) ret.mat[i][j] %= mod;
                }
            }
        }
        return ret;
    }

    Matrix pow(i64 n) const {
        Matrix ret(1), a = *this;
        for ( ; n; n >>= 1) {
            if (n & 1) ret = ret * a;
            a = a * a;
        }
        return ret;
    }
};

template<typename T> int Matrix<T>::sz = 0;
template<typename T> int Matrix<T>::mod = -1;