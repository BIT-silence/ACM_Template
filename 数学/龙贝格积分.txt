// 龙贝格求定积分
// fun为被积函数，a为积分下限，b为积分上限，eps为精度限制
// 使用时需将精度设置高一些，或者直接设置迭代次数为20

#include <iostream>
#include <cstdio>
#include <cstring>
#include <cmath>

#define MAXN 1000

using namespace std;

double w[MAXN];

double romberg(double (*fun)(double x), double a, double b, double eps = 1e-8) {
    int n = 1, i, j, k;
    double h = b - a, ep = eps + 1, s, p, q;

    w[0] = h * ((*fun)(a) + (*fun)(b)) / 2;
    for (i = 1; i < MAXN && ep >= eps; ++i) {
        for (p = j = 0; j < n; ++j) p += (*fun)(a + (j + 0.5) * h);
        p = (w[0] + h * p) / 2;
        for (s = k = 1; k <= i; ++k) {
            s *= 4;
            q = (s * p - w[k - 1]) / (s - 1);
            w[k - 1] = p;
            p = q;
        }
        ep = fabs(q - w[i - 1]);
        w[i] = q; n <<= 1; h /= 2;
    }

    return q;
}
