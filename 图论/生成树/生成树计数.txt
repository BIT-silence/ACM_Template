//生成树计数运用矩阵-树定理
//此处数据规模较小直接求行列式绝对值，如果数据规模大则使用行列式求值取模模板

#define MAX 15
#include <iostream>
#include <cstdio>
#include <cstring>
#include <cstdlib>

using namespace std;

typedef long long i64;

i64 mat[MAX][MAX], deg[MAX];

//数据规模大则将此处换成行列式求值取模模板

i64 det(i64 a[MAX][MAX], i64 n) {
    i64 i, j, k, t, ans;

    ans = 1;
    for (i = 0; i < n; ++i) {
        for (j = i + 1; j < n; ++j) {
            while (a[j][i]) {
                t = a[i][i] / a[j][i];
                for (k = 0; k < n; ++k) {
                    a[i][k] = a[i][k] - a[j][k] * t;
                    swap(a[i][k], a[j][k]);
                }
                ans = -ans;
            }
        }
        if (!a[i][i]) return 0;
        ans *= a[i][i];
    }

    return ans;
}

int main() {
    i64 ans, t, n, m, i, a, b;

    scanf("%lld", &t);
    while (t--) {
        memset(mat, 0, sizeof(mat));
        memset(deg, 0, sizeof(deg));

        scanf("%lld %lld", &n, &m);
        for (i = 0; i < m; i++) {
            scanf("%lld %lld", &a, &b);
            if (a != b) {
                ++deg[a - 1];
                ++deg[b - 1];
                mat[a - 1][b - 1] = mat[b - 1][a - 1] = -1;
            }
        }
        for (i = 0; i < n; ++i) mat[i][i] = deg[i];
        ans = det(mat, n - 1);
        printf("%lld\n", abs(ans));
    }

    return 0;
}


